//this algorithm can be used to find a node into a binary tree

FUNCTION FindNode(SearchItem: DataType) RETURNS INTEGER //returns the pointer to the node we are searching
  ThisNodePointer ← RootPointer //start at the root of the tree
  WHILE ThisNodePointer < > NullPointer //while there is a pointer (while the pointer is different than 0)
     AND Tree[ThisNodePointer].Data < > SearchItem //and item not found (data of the node is different than SeachItem data)
    IF Tree[ThisNodePointer].Data > SearchItem //if data in the node is greater than SearchItem
      THEN //follow the left pointer
        ThisNodePointer ← Tree[ThisNodePointer].LeftPointer //the pointer will be the left pointer of the current node
      ELSE //follow the right pointer
        ThisNodePointer ← Tree[ThisNodePointer].RightPointer //the pointer will be the right pointer of the current node
    ENDIF
  ENDWHILE
RETURN ThisNodePointer //return null pointer if item has not been found
ENDFUNCTION
